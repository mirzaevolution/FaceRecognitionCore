********** (Error Log: 11 Jan 2019 7:33:31 PM) **********
System.NullReferenceException: Object reference not set to an instance of an object.
   at FaceRecognition.GUILayer.Identification.IdentificationViewModel.IdentifyHandler() in D:\Projects\FaceRecognitionCore\FaceRecognition.GUILayer\Identification\IdentificationViewModel.cs:line 258
********************************************************




********** (Error Log: 12 Jan 2019 8:00:56 PM) **********
Emgu.CV.Util.CvException: OpenCV: At least two classes are needed to perform a LDA. Reason: Only one class was given!
   at Emgu.CV.CvInvoke.CvErrorHandler(Int32 status, IntPtr funcName, IntPtr errMsg, IntPtr fileName, Int32 line, IntPtr userData)
   at Emgu.CV.Face.FaceRecognizer.CvFaceRecognizerTrain(IntPtr recognizer, IntPtr images, IntPtr labels)
   at Emgu.CV.Face.FaceRecognizer.Train(IInputArray images, IInputArray labels)
   at Emgu.CV.Face.FaceRecognizer.Train[TColor,TDepth](Image`2[] images, Int32[] labels)
   at FaceRecognition.GUILayer.Identification.IdentificationViewModel.<LoadSamples>d__63.MoveNext() in D:\Projects\FaceRecognitionCore\FaceRecognition.GUILayer\Identification\IdentificationViewModel.cs:line 209
********************************************************




********** (Error Log: 1/13/2019 8:20:24 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:33 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:34 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:36 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:37 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:39 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:40 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:42 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:43 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:45 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:46 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:48 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:49 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:51 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:52 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:54 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:55 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:57 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:10:58 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:00 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:01 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:03 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:04 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:06 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:07 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:09 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:10 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:12 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:11:13 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:00 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:02 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:03 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:05 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:06 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:08 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:09 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:11 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:12 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:14 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:15 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:17 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 9:13:32 PM) **********
The calling thread cannot access this object because a different thread owns it.
********************************************************




********** (Error Log: 1/13/2019 11:18:11 PM) **********
System.ArgumentNullException: Value cannot be null.
Parameter name: input
   at MirzaCryptoHelpers.Hashings.SHA512Crypto.GetHashBytes(String input)
   at MirzaCryptoHelpers.Hashings.SHA512Crypto.GetHashBase64String(String input)
   at FaceRecognition.GUILayer.ChangeProfile.ChangeProfileViewModel.<>c__DisplayClass33_0.<<UpdateHandler>b__0>d.MoveNext() in D:\programming\MyProjects\FaceRecognition\FaceRecognitionCore\FaceRecognition.GUILayer\ChangeProfile\ChangeProfileViewModel.cs:line 118
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at FaceRecognition.GUILayer.ChangeProfile.ChangeProfileViewModel.<UpdateHandler>d__33.MoveNext() in D:\programming\MyProjects\FaceRecognition\FaceRecognitionCore\FaceRecognition.GUILayer\ChangeProfile\ChangeProfileViewModel.cs:line 111
********************************************************




********** (Error Log: 1/13/2019 11:21:27 PM) **********
System.ArgumentNullException: Value cannot be null.
Parameter name: input
   at MirzaCryptoHelpers.Hashings.SHA512Crypto.GetHashBytes(String input)
   at MirzaCryptoHelpers.Hashings.SHA512Crypto.GetHashBase64String(String input)
   at FaceRecognition.GUILayer.ChangeProfile.ChangeProfileViewModel.<>c__DisplayClass33_0.<<UpdateHandler>b__0>d.MoveNext() in D:\programming\MyProjects\FaceRecognition\FaceRecognitionCore\FaceRecognition.GUILayer\ChangeProfile\ChangeProfileViewModel.cs:line 118
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at FaceRecognition.GUILayer.ChangeProfile.ChangeProfileViewModel.<UpdateHandler>d__33.MoveNext() in D:\programming\MyProjects\FaceRecognition\FaceRecognitionCore\FaceRecognition.GUILayer\ChangeProfile\ChangeProfileViewModel.cs:line 111
********************************************************




********** (Error Log: 1/14/2019 12:55:36 AM) **********
An error occurred while executing the command definition. See the inner exception for details.
********************************************************




********** (Error Log: 1/14/2019 12:57:54 AM) **********
An error occurred while executing the command definition. See the inner exception for details.
********************************************************




